services:

  nginx:
    container_name: sae-symfony-nginx
    image: nginx:latest
    ports:
      - "8787:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php

  php:
    container_name: sae-symfony-php
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html

  mysql:
    container_name: sae-symfony-mysql
    image: mysql:8
    volumes:
      - database:/var/lib/mysql
      - ./docker/mysql/sae401.sql:/docker-entrypoint-initdb.d/sae401.sql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sae401

  phpmyadmin:
    container_name: sae-symfony-phpmyadmin
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8788:80"
    depends_on:
      - mysql

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  database:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###